Description: Add command line option to enable remote calls at runtime instead build time
Author: Josue Ortega <josue@debian.org>
Last-Update: 2019-09-17
Origin: upstream, https://salsa.debian.org/debian/rpcbind/-/commit/e7740f47cefa41b6a6044935cab3391f00d46e1f
Bug-Debian: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=939890
Bug-Ubuntu: https://bugs.launchpad.net/ubuntu/+source/cups/+bug/304393

--- a/Makefile.am
+++ b/Makefile.am
@@ -29,10 +29,6 @@ if LIBWRAP
 AM_CPPFLAGS +=	-DLIBWRAP
 endif
 
-if RMTCALLS
-AM_CPPFLAGS +=	-DRMTCALLS
-endif
-
 bin_PROGRAMS = rpcbind rpcinfo
 
 rpcbind_SOURCES = \
--- a/src/rpcbind.c
+++ b/src/rpcbind.c
@@ -88,6 +88,7 @@ int debugging = 0;	/* Tell me what's goi
 int doabort = 0;	/* When debugging, do an abort on errors */
 int dofork = 1;		/* fork? */
 int createdsocket = 0;  /* Did I create the socket or systemd did it for me? */
+int rmtcalls = 0; /* Remote calls */
 
 rpcblist_ptr list_rbl;	/* A list of version 3/4 rpcbind services */
 
@@ -798,12 +799,12 @@ got_socket:
 #endif
 
 
-#ifdef RMTCALLS
+    if (rmtcalls) {
 	/*
 	 * rmtcall only supported on CLTS transports for now.
 	 */
-	if (nconf->nc_semantics == NC_TPI_CLTS) {
-		status = create_rmtcall_fd(nconf);
+	    if (nconf->nc_semantics == NC_TPI_CLTS) {
+		    status = create_rmtcall_fd(nconf);
 #ifdef RPCBIND_DEBUG
 		if (debugging) {
 			if (status < 0) {
@@ -816,8 +817,8 @@ got_socket:
 			}
 		}
 #endif
-	}
-#endif
+	   }
+    }
 
 	return (0);
 error:
@@ -883,7 +884,7 @@ parseargs(int argc, char *argv[])
 {
 	int c;
 	oldstyle_local = 1;
-	while ((c = getopt(argc, argv, "adh:ilswf")) != -1) {
+	while ((c = getopt(argc, argv, "adh:ilswfr")) != -1) {
 		switch (c) {
 		case 'a':
 			doabort = 1;	/* when debugging, do an abort on */
@@ -913,17 +914,20 @@ parseargs(int argc, char *argv[])
 		case 'f':
 			dofork = 0;
 			break;
+		case 'r':
+			rmtcalls = 1;
+			break;
 		case 'w':
 #ifdef WARMSTART
 			warmstart = 1;
 			break;
 		default:	/* error */
-			fprintf(stderr,	"usage: rpcbind [-adhilswf]\n");
+			fprintf(stderr,	"usage: rpcbind [-adhilswfr]\n");
 #else
 			fprintf(stderr,	"-w: rpcbind compiled without WARMSTART support.\n");
 			/* FALLTHROUGH */
 		default:	/* error */
-			fprintf(stderr,	"usage: rpcbind [-adhils]\n");
+			fprintf(stderr,	"usage: rpcbind [-adhilsfr]\n");
 #endif
 			exit (1);
 		}
--- a/man/rpcbind.8
+++ b/man/rpcbind.8
@@ -11,7 +11,7 @@
 .Nd universal addresses to RPC program number mapper
 .Sh SYNOPSIS
 .Nm
-.Op Fl adhiLls
+.Op Fl adhiLlsr
 .Sh DESCRIPTION
 The
 .Nm
@@ -137,6 +137,11 @@ to do a "warm start" by read a state fil
 starts up. The state file is created when
 .Nm
 terminates.
+.It Fl r
+Turn on remote calls. Cause
+.Nm
+to open up random listening ports. Note that rpcinfo need this feature turned on
+for work properly.
 .El
 .Sh NOTES
 All RPC servers must be restarted if
--- a/configure.ac
+++ b/configure.ac
@@ -21,10 +21,6 @@ AC_ARG_ENABLE([warmstarts],
   AS_HELP_STRING([--enable-warmstarts], [Enables Warm Starts @<:@default=no@:>@]))
 AM_CONDITIONAL(WARMSTART, test x$enable_warmstarts = xyes)
 
-AC_ARG_ENABLE([rmtcalls],
-  AS_HELP_STRING([--enable-rmtcalls], [Enables Remote Calls @<:@default=no@:>@]))
-AM_CONDITIONAL(RMTCALLS, test x$enable_rmtcalls = xyes)
-
 AC_ARG_WITH([statedir],
   AS_HELP_STRING([--with-statedir=ARG], [use ARG as state dir @<:@default=/tmp@:>@])
   ,, [with_statedir=/tmp])
